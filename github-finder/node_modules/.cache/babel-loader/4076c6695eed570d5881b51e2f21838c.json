{"ast":null,"code":"var _jsxFileName = \"/home/karan/Desktop/tutorials/react projects/github-finder/src/components/users/User.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport Spinner from '../layouts/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Repos from '../repos/Repos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = ({\n  user,\n  getUser,\n  getUserRepos,\n  loading,\n  match,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getUser(this.props.match.params.login);\n    getUserRepos(this.props.match.params.login);\n  }, []); // componentDidMount() {\n  //     this.props.getUser(this.props.match.params.login);\n  //     this.props.getUserRepos(this.props.match.params.login);\n  // }\n\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable,\n    company\n  } = user;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-light\",\n        children: \"Back To Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), \"Hireable :\", hireable ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check text-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-times-circle text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card grid-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar_url,\n            className: \"round-img\",\n            alt: \"\",\n            style: {\n              width: '150px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), bio && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: html_url,\n          className: \"btn btn-dark my-1\",\n          children: \"Visit Github Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: login && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), login]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: company && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Company:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), company]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: blog && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \" Website :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), blog]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-primary\",\n          children: [\"Followers:\", followers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-success\",\n          children: [\"Following:\", following]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-light\",\n          children: [\"Public Repos:\", public_repos]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"badge badge-primary\",\n          children: [\"Public Gists:\", public_gists]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Repos, {\n        repos: repos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(User, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = User;\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired\n};\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/karan/Desktop/tutorials/react projects/github-finder/src/components/users/User.js"],"names":["React","Fragment","useEffect","Spinner","PropTypes","Link","Repos","User","user","getUser","getUserRepos","loading","match","repos","props","params","login","name","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","company","width","propTypes","bool","object","isRequired","func","array"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAiB,gBAAjB;;;AACA,MAAMC,IAAI,GAAE,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,OAAN;AAAcC,EAAAA,YAAd;AAA2BC,EAAAA,OAA3B;AAAmCC,EAAAA,KAAnC;AAAyCC,EAAAA;AAAzC,CAAD,KAAmD;AAAA;;AAC3DX,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAAC,KAAKK,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,CAAwBC,KAAzB,CAAP;AACAN,IAAAA,YAAY,CAAC,KAAKI,KAAL,CAAWF,KAAX,CAAiBG,MAAjB,CAAwBC,KAAzB,CAAZ;AACH,GAHQ,EAGP,EAHO,CAAT,CAD2D,CAK3D;AACA;AACA;AACA;;AAGI,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,UAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,GAJE;AAIGC,IAAAA,IAJH;AAKFL,IAAAA,KALE;AAMFM,IAAAA,QANE;AAOFC,IAAAA,SAPE;AAQFC,IAAAA,SARE;AASFC,IAAAA,YATE;AAUFC,IAAAA,YAVE;AAWFC,IAAAA,QAXE;AAYFC,IAAAA;AAZE,MAaFpB,IAbJ;;AAgBA,MAAIG,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK;AACD,wBACI,QAAC,QAAD;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAa,QAAA,SAAS,EAAC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,gBAKKgB,QAAQ,gBAAG;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAiD;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cAL9D,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAET,UAAV;AACA,YAAA,SAAS,EAAC,WADV;AAEA,YAAA,GAAG,EAAC,EAFJ;AAGA,YAAA,KAAK,EAAE;AAACW,cAAAA,KAAK,EAAG;AAAT;AAHP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,sBAAKZ;AAAL;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAA,sBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAUSC,GAAG,iBAAG,QAAC,QAAD;AAAA,iCACP;AAAA,sBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,gBAVf,eAaQ;AAAG,UAAA,IAAI,EAAEE,QAAT;AAAmB,UAAA,SAAS,EAAC,mBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbR,eAiBI;AAAA,kCACI;AAAA,sBACKN,KAAK,iBAAI,QAAC,QAAD;AAAA,sCACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADM,EACsBA,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAA,sBACKY,OAAO,iBAAI,QAAC,QAAD;AAAA,sCACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADQ,EACmBA,OADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,kBANJ,eAWI;AAAA,sBACKP,IAAI,iBAAI,QAAC,QAAD;AAAA,sCACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADK,EACuBA,IADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eA2CI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,mCAAgDE,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,mCAAgDC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,sCAAiDC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,sCAAmDC,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ,eAiDI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEb;AAAd;AAAA;AAAA;AAAA;AAAA,cAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqDH;AAER,CAtFD;;GAAMN,I;;KAAAA,I;AAuFNA,IAAI,CAACuB,SAAL,GAAiB;AACbnB,EAAAA,OAAO,EAAEP,SAAS,CAAC2B,IADN;AAEbvB,EAAAA,IAAI,EAAEJ,SAAS,CAAC4B,MAAV,CAAiBC,UAFV;AAGbxB,EAAAA,OAAO,EAAEL,SAAS,CAAC8B,IAAV,CAAeD,UAHX;AAIbvB,EAAAA,YAAY,EAACN,SAAS,CAAC8B,IAAV,CAAeD,UAJf;AAKbpB,EAAAA,KAAK,EAACT,SAAS,CAAC+B,KAAV,CAAgBF;AALT,CAAjB;AAQA,eAAe1B,IAAf","sourcesContent":["import React, { Fragment,useEffect } from 'react'\nimport Spinner from '../layouts/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Repos from'../repos/Repos';\nconst User= ({user,getUser,getUserRepos,loading,match,repos})=>{\n    useEffect(()=>{\n        getUser(this.props.match.params.login);\n        getUserRepos(this.props.match.params.login);\n    },[]);\n    // componentDidMount() {\n    //     this.props.getUser(this.props.match.params.login);\n    //     this.props.getUserRepos(this.props.match.params.login);\n    // }\n    \n    \n        const {\n            name,\n            avatar_url,\n            location,\n            bio, blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable,\n            company\n        } = user;\n        \n\n        if (loading) {\n            return <Spinner />\n        }\n        else {\n            return (\n                <Fragment>\n                    <Link to='/' className='btn btn-light'>\n                        Back To Search\n                    </Link>\n                    Hireable :\n                    {hireable ? <i className=\"fas fa-check text-success\" /> : < i className=\"fas fa-times-circle text-danger\" />}\n                    <div className=\"card grid-2\">\n                        <div className='all-center'>\n                            <img src={avatar_url}\n                            className='round-img'\n                            alt=''\n                            style={{width : '150px'}}\n                            />\n                            <h1>{name}</h1>\n                            <p>{location}</p>\n                        </div>\n                            {bio&&(<Fragment>\n                            <p>{bio}</p>\n                            </Fragment>)}\n                            <a href={html_url} className='btn btn-dark my-1'>\n                            Visit Github Profile\n                        </a>\n                        \n                        <ul>\n                            <li>\n                                {login && <Fragment>\n                                    <strong> Username:</strong>{login}\n                                    </Fragment>}\n                            </li>\n                            <li>\n                                {company && <Fragment>\n                                    <strong> Company:</strong>{company}\n                                    </Fragment>}\n                            </li>\n                            <li>\n                                {blog && <Fragment>\n                                    <strong> Website :</strong>{blog}\n                                    </Fragment>}\n                            </li>\n                        </ul>\n                        \n                        \n                    </div>\n                    <div className=\"card text-center\">\n                        <div className='badge badge-primary'>Followers:{followers}</div>\n                        <div className='badge badge-success'>Following:{following}</div>\n                        <div className='badge badge-light'>Public Repos:{public_repos}</div>\n                        <div className='badge badge-primary'>Public Gists:{public_gists}</div>\n                    </div>\n                    <Repos repos={repos}/>\n                </Fragment>\n            )\n        }\n    \n}\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos:PropTypes.func.isRequired,\n    repos:PropTypes.array.isRequired,\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}